{"componentChunkName":"component---node-modules-morganstanley-gatsby-theme-ms-gh-pages-src-templates-architecture-js-content-file-path-content-architecture-adr-010-built-in-apis-mdx","path":"/architecture/adr-010-built-in-apis/","result":{"data":{"site":{"siteMetadata":{"title":"ComposeUI"}},"allDirectory":{"nodes":[]},"mdx":{"frontmatter":{"title":"Built-in APIs should be built on top of the Message Router"},"fields":{"slug":"/architecture/adr-010-built-in-apis/"},"tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]}},"allMdx":{"nodes":[{"id":"add23bd4-ac57-5838-9956-79d8ea9bc82b","excerpt":"","tableOfContents":{},"frontmatter":{"title":"Architecture Decision Records"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/index.mdx"},"fields":{"slug":"/architecture/"}},{"id":"908d5dbc-ac92-5d52-82dd-ac553c9f201a","excerpt":"Context ComposeUI has several very explicit goals that make the practice and discipline of architecture very important:\n\nWe want to think…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Use ADRs"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-001-use-adrs.mdx"},"fields":{"slug":"/architecture/adr-001-use-adrs/"}},{"id":"e27b7fec-f358-52cd-a635-b08727c4f20a","excerpt":"Context ComposeUI has to fulfill a number of different goals.\n\nIt needs to be modular. Different software packages, written by different…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Configuration"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-002-configuration.mdx"},"fields":{"slug":"/architecture/adr-002-configuration/"}},{"id":"3ebff11b-ebe6-5b5a-b12d-5a09c8af2a32","excerpt":"Context When it comes to creating and maintaining projects, multiple parallel approaches are known, like monorepo, individual repos…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Solution and Project Structure"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-003-solution-and-project-structure.mdx"},"fields":{"slug":"/architecture/adr-003-solution-and-project-structure/"}},{"id":"01138fc5-7990-58d9-90fd-7ba3c89a6890","excerpt":"Context ComposeUI needs to be as modular as possible. Not only do we want the community to be able to contribute new abilities and features…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Module Structure and Loading"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-004-module-loading.mdx"},"fields":{"slug":"/architecture/adr-004-module-loading/"}},{"id":"88b2fc2f-f3c5-58c7-a645-8cce9e2067d1","excerpt":"Context As ADR-004 states, ComposeUI needs to be as modular as possible. This means any module and functionality should be configurable (AD…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Messaging"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-005-messaging.mdx"},"fields":{"slug":"/architecture/adr-005-messaging/"}},{"id":"9bf079c6-a4b4-5607-90aa-dbf1030e26b4","excerpt":"Context Observability is the ability to infer internal states of a system based on the system’s external outputs. Observability is achieved…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Observability"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-006-observability.mdx"},"fields":{"slug":"/architecture/adr-006-observability/"}},{"id":"e2f52bc3-1fe5-5370-9802-571cb56de0a3","excerpt":"Context ComposeUI is modular, and although the core and loader are responsible for loading a module, the only way for a module to interact…","tableOfContents":{"items":[{"url":"#context","title":"Context","items":[{"url":"#authenticatingidentifying-a-module","title":"Authenticating/Identifying a module"},{"url":"#opt-out-of-authentication","title":"Opt-out of Authentication"}]},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Module Communication Security"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-008-module-security.mdx"},"fields":{"slug":"/architecture/adr-008-module-security/"}},{"id":"84e9f24c-e40f-519e-80e6-0442ffa7c19a","excerpt":"Context We need a way to help the development team describe and communicate software architecture, both during up-front design sessions and…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Use of C4"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-007-use-c4.mdx"},"fields":{"slug":"/architecture/adr-007-use-c4/"}},{"id":"4c07cb51-953a-57c2-b579-2f9092fe5fdd","excerpt":"Context The Message Router is one of ComposeUI’s core components. It serves as a generic communication layer that modules can build their…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision","items":[{"url":"#simple-topic-based-pub-sub","title":"Simple, topic-based pub-sub"},{"url":"#service-calls","title":"Service calls"},{"url":"#plugable-message-pipelines","title":"Plugable message pipelines"},{"url":"#high-throughput","title":"High throughput"},{"url":"#delivery-guarantees","title":"Delivery guarantees"}]},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Message Router Requirements"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-009-message-router.mdx"},"fields":{"slug":"/architecture/adr-009-message-router/"}},{"id":"7252170e-50fc-5839-acb7-d49eb0c6b4b5","excerpt":"Context ComposeUI as a framework will provide a set of standard APIs to modules. One of these standard APIs is the pub/sub/invoke…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Built-in APIs should be built on top of the Message Router"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-010-built-in-apis.mdx"},"fields":{"slug":"/architecture/adr-010-built-in-apis/"}},{"id":"042d0f27-baca-5dfd-bdd2-5aceb6449c44","excerpt":"Context ComposeUI aims to support many different kind of modules and applications, offering the possibility to use different graphical…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"},{"url":"#considerations","title":"Considerations"}]},"frontmatter":{"title":"Process Ownership"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-011-process-ownership.mdx"},"fields":{"slug":"/architecture/adr-011-process-ownership/"}},{"id":"80f73d01-2089-5268-8200-e2bd075c87c6","excerpt":"Context As ADR-004 states, ComposeUI needs to be as modular as possible. This means any module and functionality should be configurable (AD…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Message Router"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-012-message-router.mdx"},"fields":{"slug":"/architecture/adr-012-message-router/"}},{"id":"e7d843ed-3695-59bc-bad0-027d3ea2f7b0","excerpt":"Context For some features to work, we are preloading JavaScript code into web views (eg. Message Router configuration). These scripts might…","tableOfContents":{"items":[{"url":"#context","title":"Context","items":[{"url":"#scenarios-to-consider","title":"Scenarios to consider","items":[{"url":"#1-trusted-url-loaded-into-a-popup-window","title":"1. Trusted URL loaded into a popup window"},{"url":"#2-trusted-url-loaded-into-an-iframe","title":"2. Trusted URL loaded into an iframe"},{"url":"#3-external-url-loaded-into-a-popup-window","title":"3. External URL loaded into a popup window"},{"url":"#4-external-url-loaded-into-an-iframe","title":"4. External URL loaded into an iframe"},{"url":"#5-iframe-as-a-layout-element","title":"5. iframe as a layout element"}]},{"url":"#behavior-in-other-containers","title":"Behavior in other containers","items":[{"url":"#electron","title":"Electron"}]}]},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Security requirements for preloaded scripts"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-013-script-preloading-security.mdx"},"fields":{"slug":"/architecture/adr-013-script-preloading-security/"}},{"id":"6585f83b-2395-58e4-b9df-6f468e1f5116","excerpt":"Context ComposeUI aims to support many different kind of modules. These modules, that can be started by the ModuleLoader should be stored…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#alternatives-considered","title":"Alternatives considered"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Multiple ModuleCatalogs"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-014-module-catalog.mdx"},"fields":{"slug":"/architecture/adr-014-module-catalog/"}},{"id":"78df18a0-81d4-530f-afa4-1ea6c9c4a4e3","excerpt":"Context Module Loader is responsible for starting and stopping module instances. It is also responsible for emitting lifetime events of…","tableOfContents":{"items":[{"url":"#context","title":"Context","items":[{"url":"#current-usages","title":"Current usages","items":[{"url":"#raising-events","title":"Raising events"},{"url":"#consuming-events","title":"Consuming events"}]}]},{"url":"#alternatives-considered","title":"Alternatives considered","items":[{"url":"#events","title":"Events"},{"url":"#iasyncobservablet","title":"IAsyncObservable<T>"}]},{"url":"#decision","title":"Decision"},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Module Loader events"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-015-module-loader-events.mdx"},"fields":{"slug":"/architecture/adr-015-module-loader-events/"}},{"id":"fe6be81f-1fc1-5023-bf5c-4bf8f8058f7e","excerpt":"Context We wish to ensure apps written for ComposeUI can run in any shell implementation and provide a consistent developer experience…","tableOfContents":{"items":[{"url":"#context","title":"Context","items":[{"url":"#a-list-of-features-we-want-to-provide-with-high-priority","title":"A list of features we want to provide with high priority:","items":[{"url":"#window-management","title":"Window management"},{"url":"#desktop-notifications","title":"Desktop notifications"},{"url":"#registering-global-hotkeys","title":"Registering global hotkeys"},{"url":"#ipc","title":"IPC"},{"url":"#logging","title":"Logging"}]},{"url":"#future-features-we-consider","title":"Future features we consider:","items":[{"url":"#management-of-chrome-elements","title":"Management of chrome elements"},{"url":"#opening-modules-currently-a-priority-via-fdc3","title":"Opening modules (Currently a priority via fdc3)"},{"url":"#container-consistent-popups","title":"Container-consistent popups"},{"url":"#propagating-the-container-theme","title":"Propagating the container theme"}]}]},{"url":"#decision","title":"Decision"},{"url":"#alternatives-considered","title":"Alternatives considered","items":[{"url":"#implementing-the-api-of-another-desktop-container","title":"Implementing the API of another desktop container"},{"url":"#designing-our-own-api","title":"Designing our own API"},{"url":"#do-not-define-a-shell-api","title":"Do not define a shell API"}]},{"url":"#consequences","title":"Consequences"}]},"frontmatter":{"title":"Shell API"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-016-shell-api.mdx"},"fields":{"slug":"/architecture/adr-016-shell-api/"}},{"id":"b09fd5a9-9a8c-56e0-bdb6-a7b23ec7df63","excerpt":"Context We wish to provide flexibility in the usage of ComposeUI interfaces and components.\n\nDecision\n\nIn order to allow more flexibility in…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decision","title":"Decision"},{"url":"#alternatives-considered","title":"Alternatives Considered"}]},"frontmatter":{"title":"Messaging Interface"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-017-netstandard-interfaces.mdx"},"fields":{"slug":"/architecture/adr-017-netstandard-interfaces/"}},{"id":"6d653be0-fc9a-5fc3-b782-9e54b572d766","excerpt":"Context While the Message Router is part of the ComposeUI repository, we wish to make ComposeUI as modular as possible. For this reason the…","tableOfContents":{"items":[{"url":"#context","title":"Context"},{"url":"#decisions","title":"Decisions","items":[{"url":"#messaging-implementations-should-prevent-messages-from-being-received-by-subscriptions-of-the-same-client","title":"Messaging implementations should prevent messages from being received by subscriptions of the same client"},{"url":"#service-registrations-on-the-messaging-interface-should-return-iasyncdisposable-that-when-disposed-unregisters-the-service","title":"Service Registrations on the Messaging interface should return IAsyncDisposable that when disposed unregisters the service"},{"url":"#we-will-not-support-correlationids-on-the-interface","title":"We will not support CorrelationIds on the interface"}]}]},"frontmatter":{"title":"Messaging Interface"},"internal":{"contentFilePath":"/home/runner/work/ComposeUI/ComposeUI/site/content/architecture/adr-018-messaging-interface.mdx"},"fields":{"slug":"/architecture/adr-018-messaging-interface/"}}]}},"pageContext":{"id":"7252170e-50fc-5839-acb7-d49eb0c6b4b5","category":"architecture","menu":{"home":"/","architecture":"/architecture","documentation":"/documentation"},"frontmatter":{"type":"ADR","id":"adr-010","status":"Proposed","scope":"global","deciders":"github group","date":"2022-11-29T00:00:00.000Z","title":"Built-in APIs should be built on top of the Message Router"}}},"staticQueryHashes":["1674859023","801574555"],"slicesMap":{}}